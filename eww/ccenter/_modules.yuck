(defwidget _ccenterairplane []
    (button
        :hexpand true
        :vexpand true
        :onclick "rfkill toggle all"
        :class "ccenter-airplane-button ${is_airplane_on ? "ccenter-airplane-button-on" : ""}"
        (label :halign "center"
            :text "󰀝"
            :class "ccenter-airplane-icon")))

(defwidget _ccenterbluetooth []
    (button
        :hexpand true
        :vexpand true
        :onclick ""
        :class "ccenter-bluetooth-button"
        (label :halign "center"
            :text "󰂯"
            :class "ccenter-bluetooth-icon")))

(defwidget _ccentercontrols [output brightness]
    (box :hexpand true
        :vexpand true
        :orientation "v"
        :spacing 15
        :space-evenly false
        :class "ccenter-controls"
        (box :hexpand true
            :vexpand true
            :orientation "h"
            :spacing 15
            :space-evenly false
            (box :vexpand true
                :orientation "h"
                :spacing 15
                :space-evenly false
                :valign "end"
                (label :class "ccenter-controls-icon" :text "")
                (label :class "ccenter-controls-state" :text output))
            (scale :value output
                :active true
                :hexpand true
                :min 0
                :max 100
                :round-digits true
                :onchange "pamixer --set-volume {}"
                :class "ccenter-controls-scale"
                :orientation "h"))
        (box :hexpand true
            :vexpand true
            :orientation "h"
            :spacing 15
            :space-evenly false
            (box :vexpand true
                :orientation "h"
                :spacing 15
                :space-evenly false
                :valign "end"
                (label :class "ccenter-controls-icon" :text "")
                (label :class "ccenter-controls-state" :text brightness))
            (scale :value brightness
                :active true
                :hexpand true
                :min 0
                :max 100
                :round-digits true
                :onchange "brightnessctl set {}%"
                :class "ccenter-controls-scale"
                :orientation "h"))))

(defwidget _ccenterconnections []
    (box :class "ccenter-connections-box"
        :width 180
        :orientation "h"
        :spacing "5"
        :space-evenly false
        (_ccenterairplane)
        (_ccenterbluetooth)))

(defwidget _ccenterdate [day short_pretty]
  (box :hexpand true 
       :halign "start" 
       :orientation "vertical" 
       :space-evenly false 
       :class "ccenter-date-box" 
    (label :halign "start"
           :text short_pretty 
           :class "ccenter-date-pretty")
    (label :halign "start" 
           :text day 
           :class "ccenter-date-day")))

(defwidget _fluidbat [label icon_full icon_crit icon_norm class]
  (overlay :class "ccenter-bat-overlay"
        :hexpand true
        :vexpand true
    (progress 
        :hexpand true
        :vexpand true
        :class "ccenter-bat-prog ${class}" 
        :value {EWW_BATTERY.BAT0.capacity > 94 ? 100 : EWW_BATTERY.BAT0.capacity})
    (box :valign "center" 
        :hexpand true
        :vexpand true 
        :spacing 5 
        :space-evenly false 
        :class "ccenter-bat-prog-box"
      (box :halign "start" 
            :hexpand true 
            :vexpand true
            :orientation "vertical" 
            :space-evenly false 
            :class "ccenter-bat-label-box"
        (label :halign "start" 
               :text label 
               :class "ccenter-bat-label")
        (label :halign "start" 
               :text "${EWW_BATTERY.BAT0.capacity > 95 ? 100 : EWW_BATTERY.BAT0.capacity}%" 
               :class "ccenter-bat-status-label"))
      (label :halign "end" 
             :text {EWW_BATTERY.BAT0.capacity > 95 ? icon_full :
                        EWW_BATTERY.BAT0.capacity < 21 ? icon_crit : icon_norm} 
             :class "ccenter-bat-icon"))))

(defwidget _ccenterpctl [L M R cover label title artist volume volume_icon status_icon length position]
    (box
        :hexpand true
        :orientation "vertical" 
        :space-evenly false 
        :class "ccenter-pctl-box" 
        :style "background-image: linear-gradient(0deg, rgba(0,0,0,1) 30%, rgba(0,0,0,0) 100%), url(\"${playerctl.artUrl}\")"
        (button :vexpand true
            :hexpand true
            :onmiddleclick M 
            :onclick L 
            :onrightclick R 
            (box :hexpand true
                :orientation "v"
                :space-evenly false
                (box :space-evenly false 
                    :orientation "vertical" 
                    :class "ccenter-pctl-label-title-artist"
                    (label :halign "start" 
                        :text label 
                        :class "ccenter-pctl-label")
                    (label :halign "start" 
                        :limit-width 15 
                        :wrap true 
                        :xalign 0.0 
                        :text title 
                        :class "ccenter-pctl-title")
                    (label :halign "start" 
                        :limit-width 15
                        :text artist
                        :class "ccenter-pctl-artist"))
                (box :vexpand true 
                    :valign "end" 
                    :hexpand true 
                    :space-evenly false 
                    :class "ccenter-pctl-status-volume-box"
                    (box :space-evenly false 
                        :spacing 5 
                        :hexpand true
                        :class "ccenter-pctl-volume"
                        (label :text volume_icon 
                            :class "ccenter-pctl-volume-icon")
                        (label :text volume 
                            :class "ccenter-pctl-volume-label"))
                    (label :text status_icon
                            :class "ccenter-pctl-status"
                            :hexpand true
                            :halign "end"))))
        (box :vexpand true
            :hexpand true
            :valign "end"
            :class "ccenter-pctl-prog-box"
            (scale :value position
                :active true
                :min 0
                :max length
                :round-digits true
                :timeout "1s"
                :onchange "playerctl position {}"
                :class "ccenter-pctl-scale"
                :orientation "h"))))

(defwidget _ccenteruptime [label uptime]
 (button
        :onclick "pushd ~; wezterm -e htop; popd"
        (box :space-evenly false 
            :class "ccenter-uptime-box" 
            :spacing 8 
            :halign "start"
            (box :valign "center" 
                :orientation "vertical" 
                :class "ccenter-uptime-label-value" 
                :space-evenly false
            (label :halign "start" 
                    :class "ccenter-uptime-label" 
                    :text label)
            (label :limit-width 15 
                    :halign "start" 
                    :class "ccenter-uptime-value" 
                    :text uptime)))))

(defwidget _ccenterwifi [label icon ssid]
    (button
        :hexpand true
        :onclick "pushd ~; wezterm -e nmtui; popd"
        (box :valign "center"
            :hexpand true 
            :space-evenly false 
            :class "ccenter-wifi-box"
                (box :valign "center" 
                    :hexpand true 
                    :orientation "vertical" 
                    :space-evenly false 
                    :class "ccenter-wifi-label-ssid"
                    (label :halign "start" 
                        :class "ccenter-wifi-label" 
                        :text label)
                    (label :halign "start" 
                        :class "ccenter-wifi-ssid" 
                        :text ssid))
        (label :vexpand false 
            :valign "center" 
            :halign "end" 
            :class "ccenter-wifi-icon" 
            :text icon))))

(defwidget _ccenterplaces []
    (revealer :transition "slideup"
        :reveal ccenter_reveal_places
        (box :class "ccenter-places-box"
            :vexpand true
            :hexpand true
            :spacing 5
            :orientation "h"
            (button :vexpand true
                :hexpand true
                :onclick "pushd ~; xdg-open ~/projects; popd"
                (label :text ""))
            (button :vexpand true
                :hexpand true
                :onclick "pushd ~; xdg-open ~/Downloads; popd"
                (label :text ""))
            (button :vexpand true
                :hexpand true
                :onclick "pushd ~; xdg-open ~/Videos; popd"
                (label :text ""))
            (button :vexpand true
                :hexpand true
                :onclick "pushd ~; xdg-open ~/Pictures; popd"
                (label :text ""))
            (button :vexpand true
                :hexpand true
                :onclick "pushd ~; xdg-open ~/Music; popd"
                (label :text "")))))

;; vim:ft=yuck
